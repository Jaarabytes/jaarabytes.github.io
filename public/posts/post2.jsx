import propTypes from "prop-types";
function Post2({darkMode}){
    return(
        <>
        <div className="px-5 my-5 sm:px-[20%]">
        {/* center the content, create table of contents and resize images, possibly a medium style */}
        <h1 className="text-3xl font-extrabold my-5">Git rid of it!</h1>
        <p>Have you ever encountered this error before (Perhaps when cloning a private github repository): </p>
        <br></br>
        <code>
        <i>Git authentication failed? fatal: No credential store has been selected. Support for password authentication was removed in 13th August 2021.</i>
        </code>
        <br></br>
        {/* Insert the image here */}
        <img src="./Screenshot_2024-02-26_13_54_28.jpg" className= 'my-5' alt="git error that prompts for authentication"></img>
        <p>I have encountered this multiple times and I finally figured it out</p>
        <br></br>
        {/* Insert the nerd gif here */}
        <img src='./icegif-777.gif' alt="Nerd emoji gif"></img>
        <br></br>
        <p className="text-xl font-extrabold my-5">
        Enough of foreplay, let's get serious.
        </p>
        <p>
        It seems that github enhanced their security such that inputting your password and
        username is not enough for them, since an attacker can easily get them through social 
        engineering. So, the better alternative I heard of involves "gh" ~ which is some form of
        authentication which confirms your identity before performing changes on the repository.
        </p>
        <br></br>
        <p>When cloning the preferred repository, you will have to use the SSH url</p>
        {/* Insert github SSH Url here */}
        <img  className= 'my-5' src='./Screenshot_2024-02-26_14_57_25.jpg' alt="ssh url clone github repository"></img>
        <p>Before that, you have to create a ssh key, which is a private and public key which 
            authenticate you. These keys are tedious and time-consuming to crack.
        </p>
        <br></br>
        <p>They can be generated by the following command: </p>
        <br></br>
        <code>
        ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
        </code>
        <br></br>
        <br></br>
        <p>I will explain the commands:</p>
        <br></br>
        <p>
            This generates the SSH key using the RSA algorithm and using 4096 bytes hence
        the (-t rsa) and (-b 4096). The -C stands comment or identifier for your email. Replace and input
        your email there.
        </p>
        <br></br>
        <p>
        This will be the response from the terminal: 
        </p>
        <br></br>
        <code>
        Generating public/private ALGORITHM key pair.
        </code>
        <br></br>
        <br></br>
        <p>
            You will be prompted to input and confirm a safe passphrase. You may
            also press Enter to skip this process. 
        </p>
        <br></br>
        <p>
            Add your ssh key to the ssh agent by running the below command
            (Depending on the system you are running, you may need superuser privileges)
        </p>
        <br></br>
        <code>
            <pre>
            eval "$(ssh-agent -s)
            <br></br>
            ssh-add ~/.ssh/id_rsa
            </pre>
        </code>
        <br></br>
        <br></br>
        <p>You  may want to verify if your SSH key was added. Use the below command: </p>
        <br></br>
        <code>ssh -T git@github.com</code>
        <br></br>
        <br></br>
        <p>Onto the finals where we add the ssh key to our github account:</p>
        <img className="my-5" src='./Screenshot_2024-02-13_15_47_11.png' alt='github personal account settings'></img>
        <p>Head towards your personal account settings, navigate towards the 'SSH and GPG keys option'</p>
        <p>Copy the contents of the contents of the id_rsa.pub file which is under the hidden .ssh directory and paste it as your personal access token</p>
        <br></br>
        <p>There you go! You didn't procastinate, Hurray!!!</p>
        <br></br>
        <p>From there on, I believe there will be minimal issues encountered however what if you cloned the repository using the http client
            but now cannot authenticate? Don't fret.
        </p>
        <br></br>
        <p>Head towards the repository directory using the cd command and type in the following command in your terminal: </p>
        <br></br>
        <code>
        git remote set-url origin &lt;ssh_github_repo_link&gt;
        </code>
        <br></br>
        <br></br>
        <p>The above command adds the ssh url to the origin url so that github can authenticate you using your SSH key.</p>
        <br></br>
        <p>Unrelated but kindly remember the order: <b>Git remote add origin</b>, Dont mix it up</p>
        <br></br>
        <p>Thanks for reading</p>
        </div>
        </>
    )
}

Post2.propTypes = {
    darkMode : propTypes.bool.isRequired
}

export default Post2;